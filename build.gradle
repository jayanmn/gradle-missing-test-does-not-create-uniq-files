import groovy.xml.MarkupBuilder

apply plugin: 'java'


group "org.gradle.bugdemo"
version "0.1.0.0"


repositories {
    jcenter()
    mavenCentral()
}


dependencies {


    testImplementation 'junit:junit:4.12'


}


test {

//
//    filter {
//        //    includeTestsMatching "*TestNumbers3WithNoTestMethodsTest*"
//        //includeTestsMatching "*NotATestButClassEndingInTest*"
//        // includeTestsMatching "TestNumbers4SkippedClassLevelTest"
//
//    }


    afterTest { TestDescriptor td, TestResult tr ->
        def destination = reports.junitXml.getDestination().getAbsolutePath()
        if (tr.exception != null) {
            def message = tr.exception.message
            if (message.startsWith("No tests found in")) {
                String[] messageData = message.split("\\s+")
                String offendingTestClassName = messageData[4]
                createXmlResultFile(destination, offendingTestClassName, message, tr)

            } else {
                String offendingTestClassName = td.className;
                createXmlResultFile(destination, offendingTestClassName, message, tr)
            }
        }
    }

}

private void createXmlResultFile(destination, String offendingTestClassName, message, tr) {
    def xmlBuillder = new MarkupBuilder(
            new FileWriter("${destination}/TEST-${offendingTestClassName}.xml"));
    xmlBuillder.setDoubleQuotes(true)
    xmlBuillder.testsuite(name: offendingTestClassName, tests: 1, failures: 1, skipped: 0, errors: 0, hostname: "ignore", time: 1.0) {
        testcase(name: "warning", classname: offendingTestClassName) {
            failure(message: message, type: tr.exception.class.canonicalName, time: 1.0,
                    "${tr.exception}")
        }
    }
}

